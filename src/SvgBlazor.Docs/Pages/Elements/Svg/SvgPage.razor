@page "/elements/svg"

<ExampleTitle>Svg</ExampleTitle>
<ElementDescription ElementType="@typeof(Svg)" />
<SvgComponent @ref="svgref" Width="500" Height="500" OnClick="OnSvgClicked" />
<button @onclick="OnAddElement">Add random element</button>
<p>Click an element to remove</p>
<ElementApiDocs ElementType="@typeof(Svg)" />

@code {
    MarkupString markupString => (MarkupString)description;

    string description = $@"<b>SvgComponent</b> is the main class of the library.
It provides context allowing <b>ISvgElement</b> type objects to be added, removed and etc.
Although, SvgComponent allows using <b>ChildContent (RenderFragment)</b> as it's content it was designed mainly to use
pure C# code with absolute minimum use of JavaScript.
<br />
To start working with the library first, create <b>SvgComponent</b> like so:
<SvgComponent @ref=""svgref"" Width=""500"" Height=""500""";

    SvgComponent svgref;

    private void OnAddElement()
    {
        SvgElement c;

        var id = new Random().Next(0, 3);
        switch (id)
        {
            case 0:
                c = new SvgCircle()
                {
                    CenterX = new Random().Next(25, 475),
                    CenterY = new Random().Next(25, 475),
                    Radius = new Random().Next(5, 40),
                };
                break;
            case 1:
                c = new SvgLine()
                {
                    X1 = new Random().Next(25, 475),
                    Y1 = new Random().Next(25, 475),
                    X2 = new Random().Next(25, 475),
                    Y2 = new Random().Next(25, 475),
                };
                break;
            default:
                c = new SvgText()
                {
                    X = new Random().Next(25, 475),
                    Y = new Random().Next(25, 475),
                    Text = "Test",
                };
                break;
        }

        SvgContainer g = new SvgG();

        c.OnClick = EventCallback.Factory.Create<MouseEventArgs>(c, async (args) =>
        {
            Console.WriteLine("Element clicked: " + c.Tag());
            Console.WriteLine("Svg container (g) bounding box: " + await svgref.GetBoundingBox(g));
            Console.WriteLine("Element bounding box: " + await svgref.GetBoundingBox(c));
        });

        var colors = new string[] { "red", "green", "blue", "yellow", "purple" };

        c.Fill = new SvgFill
        {
            Color = colors[new Random().Next(0, colors.Length)],
            Opacity = (float)new Random().NextDouble()
        };

        c.Stroke = new SvgStroke
        {
            Color = colors[new Random().Next(0, colors.Length)],
            Width = new Random().Next(1, 5),
        };

        g.Add(c);
        svgref.Add(g);
    }

    private void OnSvgClicked(MouseEventArgs args)
    {
        Console.WriteLine("Svg clicked");
    }
}
