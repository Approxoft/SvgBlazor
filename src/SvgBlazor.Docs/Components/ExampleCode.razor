@using System.IO;
@inject IJSRuntime JS
<pre @ref="componentref">@((MarkupString)codeMarkup)</pre>

@code {
    private string codeMarkup;

    [Parameter]
    public string ItemName { get; set; }

    ElementReference componentref;

    protected override void OnInitialized()
    {
        var resourceName = typeof(ExampleCode)
            .Assembly
            .GetManifestResourceNames()
            .FirstOrDefault(x => x.Contains($"{ItemName}.html"));

        if (resourceName is null)
        {
            codeMarkup = "<p>No code</p>";
            return;
        }

        using (var resourceStream = typeof(ExampleCode).Assembly.GetManifestResourceStream(resourceName))
        {
            using (var reader = new StreamReader(resourceStream))
            {
                codeMarkup = reader.ReadToEnd();
            }
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync("highlightCodeElement", componentref);
        }
    }
}
